name: Publish Package to GitHub Packages

on:
  release:
    types: [created] # Typically publish new versions on release
  # You might remove push/pull_request triggers if you only want to publish on release
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-publish-gpr: # Renamed job for clarity
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Grant write permissions for publishing to GitHub Packages

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- FIX: Temporarily modify package.json for GitHub Packages ---
      # Keep the jq step to change the name to @oseelabs/cli for GPR
      - name: Prepare package.json for GitHub Packages
        run: |
          PKG_NAME=$(node -p "require('./package.json').name")
          PKG_VERSION=$(node -p "require('./package.json').version")
          REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          NEW_PKG_NAME="@${REPO_OWNER}/$(basename $PKG_NAME)"

          echo "Original package name: ${PKG_NAME}"
          echo "New package name for GPR: ${NEW_PKG_NAME}"

          jq --indent 2 ".name = \"${NEW_PKG_NAME}\"" package.json > package.json.tmp && mv package.json.tmp package.json

          echo "Modified package.json name to: $(node -p "require('./package.json').name")" # Verify change

      # --- Use the standard setup-node configuration for GitHub Packages ---
      - name: Set up Node.js and configure GPR
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com/' # <-- Tell setup-node to use GPR
          # The scope should ideally match the package name being published to GPR (@oseelabs)
          # setup-node with registry-url and token should handle this automatically
        env: # <-- Provide the token TO THE setup-node step
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      # - name: Run tests # Uncomment if needed
      #   run: npm test

      # --- Publish to GitHub Packages relying on setup-node configuration ---
      - name: Publish to GitHub Packages
        # Now, npm is configured by setup-node to use the GPR for the @oseelabs scope
        run: npm publish
        # No need to set env vars again here if setup-node did it correctly
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   NPM_CONFIG_REGISTRY: 'https://npm.pkg.github.com/'